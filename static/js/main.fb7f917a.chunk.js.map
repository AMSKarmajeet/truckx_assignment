{"version":3,"sources":["components/Dashboard/Dashboard.js","components/Login/Login.js","components/Login/AlreadyLogin.js","components/App/App.js","components/App/useToken.js","index.js"],"names":["columnDefs","headerName","field","cellRenderer","cellRendererParams","editHandler","alert","deleteHandler","BtnCellRenderer","props","bind","this","value","onClick","Component","Dashboard","useState","users","setUsers","filterText","setFilterText","setGridApi","useEffect","fetchData","axios","get","then","data","length","placeholder","onChange","e","target","to","className","style","width","height","defaultColDef","flex","quickFilter","onGridReady","params","api","setQuickFilter","frameworkComponents","btnCellRenderer","rowData","loginUser","credentials","a","fetch","method","headers","body","JSON","stringify","json","Login","setToken","username","setUserName","password","setPassword","handleSubmit","preventDefault","token","onSubmit","type","AlreadyLogin","id","App","tokenString","localStorage","getItem","userToken","parse","getToken","setItem","useToken","href","path","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.fb7f917a.chunk.js","sourcesContent":["import {Component, useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\n\r\nfunction Dashboard() {\r\n  const [users, setUsers] = useState([]);\r\n  const [filterText, setFilterText] = useState('');\r\n  const [gridApi, setGridApi] = useState(null);\r\n\r\n  const onGridReady = (params) => {\r\n    setGridApi(params.api);\r\n    params.api.setQuickFilter(filterText);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  },[])\r\n\r\n  const fetchData = () => {\r\n    axios\r\n      .get('https://reqres.in/api/users')\r\n      .then(({ data }) => {\r\n        setUsers(data.data)\r\n      })\r\n  }\r\n\r\n  return users.length == 0 ? (\r\n    <div>\r\n      <h2>Loading</h2>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <h2>List of Users</h2>\r\n      <input placeholder='filter text' onChange={e => setFilterText(e.target.value)}/>\r\n      <Link to=\"/user/create\" className=\"btn btn-primary\">New User</Link>\r\n      <div\r\n\t\t\t\tclassName=\"ag-theme-balham\"\r\n\t\t\t\tstyle={{\r\n          width: '90vw',\r\n          height: '90vh'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<AgGridReact\r\n          defaultColDef={{\r\n            flex: 1\r\n          }}\r\n          quickFilter={filterText}\r\n          onGridReady={onGridReady}\r\n          frameworkComponents={{\r\n            btnCellRenderer: BtnCellRenderer,\r\n          }}\r\n\t\t\t\t\tcolumnDefs={columnDefs}\r\n\t\t\t\t\trowData={users}>\r\n\t\t\t\t</AgGridReact>\r\n\t\t\t</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst columnDefs = [\r\n  {headerName: \"#\", field: \"id\"},\r\n  {headerName: \"Email\", field: \"email\"},\r\n  {headerName: \"First\", field: \"first_name\"},\r\n  {headerName: \"Last\", field: \"last_name\"},\r\n  {\r\n    headerName:'Operations',\r\n    cellRenderer: 'btnCellRenderer',\r\n    cellRendererParams: {\r\n      editHandler: function(field) {\r\n        alert(`${field} was edited`);\r\n      },\r\n      deleteHandler: function(field) {\r\n        alert(`${field} was deleted`);\r\n      },\r\n    }\r\n  },\r\n]\r\n\r\nclass BtnCellRenderer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.editHandler = this.editHandler.bind(this);\r\n    this.deleteHandler = this.deleteHandler.bind(this);\r\n  }\r\n  editHandler() {\r\n   this.props.editHandler(this.props.value);\r\n  }\r\n  deleteHandler() {\r\n    this.props.deleteHandler(this.props.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.editHandler}>Edit</button>\r\n        <button onClick={this.deleteHandler}>Delete</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Login.css';\r\n\r\nasync function loginUser(credentials) {\r\n return fetch('https://reqres.in/api/login', {\r\n   method: 'POST',\r\n   headers: {\r\n     'Content-Type': 'application/json'\r\n   },\r\n   body: JSON.stringify(credentials)\r\n })\r\n   .then(data => data.json())\r\n}\r\n\r\nexport default function Login({ setToken }) {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const token = await loginUser({\r\n      username,\r\n      password\r\n    });\r\n    setToken(token);\r\n  }\r\n\r\n  return(\r\n    <div className=\"login-wrapper\">\r\n      <h1>Please Log In</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <p>Username</p>\r\n          <input type=\"text\" onChange={e => setUserName(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          <p>Password</p>\r\n          <input type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n        </label>\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Login.css';\r\n\r\nexport default function AlreadyLogin() {\r\n\r\n  return(\r\n    <div className=\"login-wrapper\">\r\n      <h1>You are Authenticated</h1>\r\n      <h2>Logout Page under construction...</h2>\r\n      <h2><bold id=\"gre\">For now!</bold> clear your browser cookies for this site, or check it on incognito mode.</h2>\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\nimport Login from '../Login/Login';\r\nimport AlreadyLogin from '../Login/AlreadyLogin';\r\nimport useToken from './useToken';\r\n\r\nfunction App() {\r\n\r\n  const { token, setToken } = useToken();\r\n\r\n  if(!token) {\r\n    return <Login setToken={setToken} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h1>My Customers</h1>\r\n      <h3>To view my list of customer go to:- <a href=\"http://localhost:3000/dashboard\">http://localhost:3000/dashboard</a></h3>\r\n      <h3>Home:- <a href=\"http://localhost:3000\">http://localhost:3000</a></h3>\r\n      <h3>Login:- <a href=\"http://localhost:3000/alreadyLogin\">http://localhost:3000/login</a></h3>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/dashboard\">\r\n            <Dashboard />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/alreadyLogin\">\r\n            <AlreadyLogin />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken?.token\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token\r\n  }\r\n}\r\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./components/App/App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}